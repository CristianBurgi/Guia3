/*
Un Kiosco tiene 3 Empleados. Vamos a contar de dos clases. Kiosco, que tendrá los atributos:
dirección, nombre, cuit y 3 atributos de tipo Empleado; y la clase Empleado posee los atributos:
nombre, apellido, fecha de ingreso y dni. Usted deberá pensar en que funcionalidad incorporar en
la clase Kiosoco para que podamos incorporar sólo hasta 3 Empleados y poder mostrar cual es el
Empleado con mayor antigüedad.

Ahora en el método main de la clase principal usted creará un Kiosco y 3 Empleados, luego
incorporará al Kisoco esos Empleados y le solicitará al Kiosco que muestre los datos del Empleado
de mayor antigüedad.
 */
package guia3ejercicio2;

import java.util.Date;

/**
 *
 * @author Criss Candioti
 */
public class Guia3Ejercicio2 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Date fechaDeIngreso1 = new Date(117, 10, 5);
        Date fechaDeIngreso2 = new Date(117, 9, 10);
        Date fechaDeIngreso3 = new Date(117, 11, 15);
        Empleado sujeto1 = new Empleado("Carlitox", "Freya", fechaDeIngreso1, 321456987);
        Empleado sujeto2 = new Empleado("Valentina", "Frey", fechaDeIngreso2, 987159357);
        Empleado sujeto3 = new Empleado("El Viejo", "Chaleco", fechaDeIngreso3, 357159654);
        Kiosco k1 = new Kiosco("La Bacha", "Las Heras", 2025987159);
        System.out.println("Bienvenido a nuestra app para contratar");
        System.out.println("A continuacion mostraremos a 3 personas");
        System.out.println("Sus perfiles laborales son perfectos para el puesto");
        k1.contratos(sujeto1);
        k1.contratos2(sujeto2);
        k1.contratos3(sujeto3);
        k1.mayorAntiguedad();
        
    }

}







/*
la clase Empleado posee los atributos:
nombre, apellido, fecha de ingreso y dni. Usted deberá pensar en que funcionalidad incorporar en
la clase Kiosoco para que podamos incorporar sólo hasta 3 Empleados y poder mostrar cual es el
Empleado con mayor antigüedad.
 */
package guia3ejercicio2;

import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author Criss Candioti
 */
public class Empleado {

    private String nombre;
    private String apellido;
    private Date fechaDeIngreso;
    private int dni;

    public Empleado() {
    }

    public Empleado(String nombre, String apellido, Date fechaDeIngreso, int dni) {
        this.nombre = nombre;
        this.apellido = apellido;
        this.fechaDeIngreso = fechaDeIngreso;
        this.dni = dni;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getNombre() {
        return nombre;
    }

    public void setApellido(String apellido) {
        this.apellido = apellido;
    }

    public String getApellido() {
        return apellido;
    }

    public Date getFechaDeIngreso() {
        return fechaDeIngreso;
    }

    public void setFechaDeIngreso(Date fechaDeIngreso) {
        this.fechaDeIngreso = fechaDeIngreso;
    }

    public int getDni() {
        return dni;
    }

    public void setDni(int dni) {
        this.dni = dni;
    }

    @Override
    public String toString() {
        return "Empleado{" + "nombre=" + nombre + ", apellido=" + apellido + ", fechaDeIngreso=" + fechaDeIngreso + ", dni=" + dni + '}';
    }

    public String fechaFormateadaDeIngreso() {
    SimpleDateFormat sdf = new SimpleDateFormat();
    String fechaFormateadaDeIngreso = sdf.format(fechaDeIngreso);
    return fechaFormateadaDeIngreso;
    }
    
}






/*
Kiosco, que tendrá los atributos:
dirección, nombre, cuit y 3 atributos de tipo Empleado
 */
package guia3ejercicio2;

import java.util.Scanner;

/**
 *
 * @author Criss Candioti
 */
public class Kiosco {

    private String nombre;
    private String direccion;
    private int cuit;
    private Empleado empleado1;
    private Empleado empleado2;
    private Empleado empleado3;

    public Kiosco() {
    }

    public Kiosco(String nombre, String direccion, int cuit) {
        this.nombre = nombre;
        this.direccion = direccion;
        this.cuit = cuit;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getDireccion() {
        return direccion;
    }

    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }

    public int getCuit() {
        return cuit;
    }

    public void setCuit(int cuit) {
        this.cuit = cuit;
    }

    public Empleado getEmpleado1() {
        return empleado1;
    }

    public void setEmpleado1(Empleado empleado1) {
        this.empleado1 = empleado1;
    }

    public Empleado getEmpleado2() {
        return empleado2;
    }

    public void setEmpleado2(Empleado empleado2) {
        this.empleado2 = empleado2;
    }

    public Empleado getEmpleado3() {
        return empleado3;
    }

    public void setEmpleado3(Empleado empleado3) {
        this.empleado3 = empleado3;
    }

    @Override
    public String toString() {
        return "Kiosco{" + "nombre=" + nombre + ", direccion=" + direccion + ", cuit=" + cuit + ", empleado1=" + empleado1 + ", empleado2=" + empleado2 + ", empleado3=" + empleado3 + '}';
    }

    public void contratos(Empleado empleado) {
        Scanner leer = new Scanner(System.in);
        System.out.println("Desea contratar a :");
        System.out.println("Nombre: " + empleado.getNombre());
        System.out.println("Apellido: " + empleado.getApellido());
        System.out.println("Documento: " + empleado.getDni());
        while (true) {
            String respuesta = leer.nextLine();
            switch (respuesta) {
                case "si":
                    this.empleado1 = empleado;
                    System.out.println("Perfecto, lo ingresaremos al sistema");
                    System.out.println("La fecha de ingreso es: " + empleado.fechaFormateadaDeIngreso());
                    return;
                case "no":
                    System.out.println("Me importa un carajo, contrata igual");
                default:
                    System.out.println("Ingresa bien las cosas");
            }

        }
    }

    public void contratos2(Empleado empleado) {
        Scanner leer = new Scanner(System.in);
        System.out.println("Desea contratar a :");
        System.out.println("Nombre: " + empleado.getNombre());
        System.out.println("Apellido: " + empleado.getApellido());
        System.out.println("Documento: " + empleado.getDni());
        while (true) {
            String respuesta = leer.nextLine();
            switch (respuesta) {
                case "si":
                    this.empleado2 = empleado;
                    System.out.println("Perfecto, lo ingresaremos al sistema");
                    System.out.println("La fecha de ingreso es: " + empleado.fechaFormateadaDeIngreso());
                    return;
                case "no":
                    System.out.println("Me importa un carajo, contrata igual");
                default:
                    System.out.println("Ingresa bien las cosas");
            }

        }
    }

    public void contratos3(Empleado empleado) {
        Scanner leer = new Scanner(System.in);
        System.out.println("Desea contratar a :");
        System.out.println("Nombre: " + empleado.getNombre());
        System.out.println("Apellido: " + empleado.getApellido());
        System.out.println("Documento: " + empleado.getDni());
        while (true) {
            String respuesta = leer.nextLine();
            switch (respuesta) {
                case "si":
                    this.empleado3 = empleado;
                    System.out.println("Perfecto, lo ingresaremos al sistema");
                    System.out.println("La fecha de ingreso es: " + empleado.fechaFormateadaDeIngreso());
                    return;
                case "no":
                    System.out.println("Me importa un carajo, contrata igual");
                default:
                    System.out.println("Ingresa bien las cosas");
            }

        }
    }

    public void mayorAntiguedad() {
        if ((this.empleado1.getFechaDeIngreso().compareTo(this.empleado2.getFechaDeIngreso()) < 0)) {
            System.out.println("El empleado " + this.empleado1.getNombre() + " ingreso recientemete");
        } else {
            System.out.println("El empleado " + this.empleado2.getNombre() + " tiene mas antiguedad");
        }
    }
}
