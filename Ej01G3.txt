//PERSONA

package guia3.Ejercicio1;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

public class Persona {

    private String nombre;
    private String apellido;
    private int edad;
    private int documento;
    private Perro perro1;
    private Perro perro2;
    private Perro perro3;
    
    private Perro [] perrera; // Asociación de la clase Perro a la clase Persona desde el array perrera[]

    public Persona(String nombre, String apellido, int edad, int documento) {
        this.nombre = nombre;
        this.apellido = apellido;
        this.edad = edad;
        this.documento = documento;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getApellido() {
        return apellido;
    }

    public void setApellido(String apellido) {
        this.apellido = apellido;
    }

    public int getEdad() {
        return edad;
    }

    public void setEdad(int edad) {
        this.edad = edad;
    }

    public int getDocumento() {
        return documento;
    }

    public void setDocumento(int documento) {
        this.documento = documento;
    }

    public void adoptarPerro(Perro cancito) {  //El ejercicio en cuestión propone sólo adoptar tres perros.

        if (perro1 == null) {
            perro1 = cancito;
            System.out.println("Adopté con éxito a " + perro1.getNombre());
        } else if (perro2 == null) {
            perro2 = cancito;
            System.out.println("Adopté con éxito a " + perro2.getNombre());
        } else if (perro3 == null) {
            perro3 = cancito;
            System.out.println("Adopté con éxito a " + perro3.getNombre());
        } else {
            System.out.println("Ya no puedo adoptar");
        }
    }

    public Perro perroMasViejo() {
        Perro perroMasViejo = null;

        if (perro1 != null && perro2 != null && perro3 != null) {
            if (perro1.getEdad() >= perro2.getEdad() && perro1.getEdad() >= perro3.getEdad()) {
                perroMasViejo = perro1;
            } else if (perro2.getEdad() >= perro1.getEdad() && perro2.getEdad() >= perro3.getEdad()) {
                perroMasViejo = perro2;
            } else {
                perroMasViejo = perro3;
            }
        } else if (perro1 != null && perro2 != null) {
            if (perro1.getEdad() >= perro2.getEdad()) {
                perroMasViejo = perro1;
            } else {
                perroMasViejo = perro2;
            }
        } else if (perro1 != null && perro3 != null) {
            if (perro1.getEdad() >= perro3.getEdad()) {
                perroMasViejo = perro1;
            } else {
                perroMasViejo = perro3;
            }
        } else if (perro2 != null && perro3 != null) {
            if (perro2.getEdad() >= perro3.getEdad()) {
                perroMasViejo = perro2;
            } else {
                perroMasViejo = perro3;
            }
        } else if (perro1 != null) {
            perroMasViejo = perro1;
        } else if (perro2 != null) {
            perroMasViejo = perro2;
        } else if (perro3 != null) {
            perroMasViejo = perro3;
        }

        return perroMasViejo;
    }
    
    public static void agregarPerros(Perro []... perro){  // esto es una varargs y se utiliza para llenar con una cantidad indeterminada de variables
        Scanner lect = new Scanner(System.in);
        Perro perrito = new Perro();
        ArrayList<Perro> listaPerros = new ArrayList<>(); // Se usa ArrayList, una estructura dinámica y redimensionable.
        int i = 0;
        while(true){
            System.out.println("Ingresar perrito a la lista? SI/NO");
            String eleccion = lect.next().toUpperCase();
            if("NO".equals(eleccion)){
                System.out.println(listaPerros);
                break;
            } else if("SI".equals(eleccion)){
                Scanner lectura = new Scanner(System.in);
                System.out.println("Ingresar nombre del perrito:");
                String nombrePerro = lectura.nextLine();
                perrito.setNombre(nombrePerro);
                System.out.println("Ingresar raza:");
                String tipoRaza = lectura.nextLine();
                perrito.setRaza(tipoRaza);
                System.out.println("Ingresar edad del perrito");
                int edadPerro = lectura.nextInt();
                lectura.nextLine(); // Descartar el carácter de nueva línea pendiente en el búfer de entrada
                perrito.setEdad(edadPerro);                
                System.out.println("Ingresar tamaño del perrito");                
                String tamañoPerro = lectura.nextLine();
                perrito.setTamaño(tamañoPerro); 
                
                listaPerros.add(i, perrito);
                //listaPerros.set(i, perrito); Esta sentencia se utiliza para modificar datos ya existentes.
                
                i++;
                System.out.println(listaPerros);
                //agregarPerros(listaPerros);
            }
        }
        
        
        // En el main se llamará al método agregarPerros() y agregaremos como argumentos
        // de sus parámetros los objetos Perro que se hayan instanciado
        
        
    }
    
    public void adoptPuppy(){ // creamos un array sin límites para agregar cuantos perros quisieramos
        agregarPerros();
        String [] perritos = new String[3]; // el '3' es la dimensión del array [0, 1, 2] omg!
        
        String [] caninos = new String[5];
        //this.perrera = perritos; 
        caninos[0] = "MAX";
        caninos[1] = "LADY";
        caninos[2] = "KAN";
        caninos[3] = "NARNIA";//                                 0       1      2        3        4    
        caninos[4] = "TIMON"; // esto va a ser igual a caninos["MAX", "LADY", "KAN", "NARNIA", "TIMON"] array de 5 subíndices
                
        Scanner lectura = new Scanner(System.in);
        int cont = 0;
        for (String canino : caninos) { //  for each, usado para recorrer elementos de una colección.
            System.out.println("Adoptar al siguiente perrito? " + canino + " SI/NO"); //para concatenar un array debemos convertirlo a String
            String eleccion = lectura.next().toUpperCase();
                        
            if ("SI".equals(eleccion)) {
                perritos[cont] = canino;
                cont++;
            }else {
                System.out.println("Okey, pasemos al siguiente perrito");
            }
            if(cont == 3){
                System.out.println("Límite excedido de perritos adoptados");
                System.out.println("Los perritos adoptados son: " + Arrays.toString(perritos));
                break;
            }            
            
        }
        
              
        
        }
        
        
}


//PERRO

package guia3.Ejercicio1;

import java.util.Arrays;


public class Perro {
    
    private String nombre;
    private String raza;
    private int edad;
    private String tamaño;
    
    public Perro [] perrera;  //declaración de una variable array, arreglo o vector como más se quiera con 3 subíndices

    public Perro() {
    }   

    public Perro(String nombre, String raza, int edad, String tamaño) {
        this.nombre = nombre;
        this.raza = raza;
        this.edad = edad;
        this.tamaño = tamaño;
    }

    public Perro(Perro[] perrera) {  // Generación del constructor del array
        this.perrera = perrera;
    }

    public Perro[] getPerrera() {
        return perrera;
    }                                  // Generación del get y set del array

    public void setPerrera(Perro[] perrera) { 
        this.perrera = perrera;
    }
    
    public void crearPerrera(){
        Perro [] limiteAdopcion  = new Perro[2];
        System.out.println("Has adoptado con éxito a: " + Arrays.toString(limiteAdopcion)); // Convertimos a String el array con el método toString()
    }
        
    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getRaza() {
        return raza;
    }

    public void setRaza(String raza) {
        this.raza = raza;
    }

    public int getEdad() {
        return edad;
    }

    public void setEdad(int edad) {
        this.edad = edad;
    }

    public String getTamaño() {
        return tamaño;
    }

    public void setTamaño(String tamaño) {
        this.tamaño = tamaño;
    }

    @Override
    public String toString() {
        return "Perro{" + "nombre=" + nombre + ", raza=" + raza + ", edad=" + edad + ", tama\u00f1o=" + tamaño + '}';
    }        

}

//MAIN

package guia3.Ejercicio1;

public class Main {

    public static void main(String[] args) {

        // Crear una Persona y 4 Perros
        Persona persona = new Persona("Juan", "Pérez", 30, 23562019);
        Perro can1 = new Perro("Bobby", "Bulldog", 5, "Mediano");
        Perro can2 = new Perro("Lucky", "Dálmata", 3, "Grande");
        Perro can3 = new Perro("Rufus", "Pastor Alemán", 7, "Grande");
        Perro can4 = new Perro("Milo", "Chihuahua", 1, "Pequeño");

        // Hacer que la persona adopte los perros
        persona.adoptarPerro(can1);
        persona.adoptarPerro(can2);
        persona.adoptarPerro(can3);
        persona.adoptarPerro(can4);

        // Obtener perro más viejo        
        Perro perroMasViejo = persona.perroMasViejo();

        if (perroMasViejo == null) {
            System.out.println("No se ha adoptado ningún perro.");
        } else {
            System.out.println("El perro más viejo es " + perroMasViejo.getNombre() + ","
                    + " con " + perroMasViejo.getEdad() + " años de edad.");
        }
        
        //Persona.agregarPerros();        
        persona.adoptPuppy();

    }
}